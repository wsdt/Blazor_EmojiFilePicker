#pragma checksum "C:\Users\WSDT\Desktop\C#_.NET\KevinRiedl\RealtimeChat_WebAssembly\EmojiPicker\Components\SubComponents\EmojiPanel - Copy.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6bec43a5abe6a252988534e51a6d6c05f8688dc7"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WSDT.EmojiFilePicker.Sub
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\WSDT\Desktop\C#_.NET\KevinRiedl\RealtimeChat_WebAssembly\EmojiPicker\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\WSDT\Desktop\C#_.NET\KevinRiedl\RealtimeChat_WebAssembly\EmojiPicker\Components\SubComponents\EmojiPanel - Copy.razor"
using WSDT.EmojiFilePicker;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\WSDT\Desktop\C#_.NET\KevinRiedl\RealtimeChat_WebAssembly\EmojiPicker\Components\SubComponents\EmojiPanel - Copy.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
    public partial class EmojiPanel___Copy : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 38 "C:\Users\WSDT\Desktop\C#_.NET\KevinRiedl\RealtimeChat_WebAssembly\EmojiPicker\Components\SubComponents\EmojiPanel - Copy.razor"
       
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback<string> AddEmoji { get; set; }

    public EmojiPanelTab ActivePage { get; set; }
    List<EmojiPanelTab> Pages = new List<EmojiPanelTab>();
    private static EmojiList emojiInstance = new EmojiList(); // needed for reflection

    internal void AddPage(EmojiPanelTab tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1) ActivePage = tabPage;
        StateHasChanged();
    }

    string GetButtonClass(EmojiPanelTab page)
    {
        return page == ActivePage ? "btn-primary" : "btn-secondary";
    }

    void ActivatePage(EmojiPanelTab page)
    {
        ActivePage = page;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
